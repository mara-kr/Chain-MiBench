# These config variables are designed to be overriden from the
# application makefile, not edited in Makefile.defaults.

THIS_DIR := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
include $(THIS_DIR)/Makefile.defaults

# EDB board version
LOCAL_CFLAGS += -DLIBEDB_BOARD_VERSION_MAJOR=$(LIBEDB_BOARD_VERSION_MAJOR)
LOCAL_CFLAGS += -DLIBEDB_BOARD_VERSION_MINOR=$(LIBEDB_BOARD_VERSION_MINOR)

# Encode debugger state machine state onto pins
ifeq ($(CONFIG_STATE_PINS),1)
LOCAL_CFLAGS += -DCONFIG_STATE_PINS
endif # CONFIG_STATE_PINS

# Encode events onto pins, for tracing during debugging
ifeq ($(CONFIG_EVENT_PINS),1)
LOCAL_CFLAGS += -DCONFIG_EVENT_PINS
endif # CONFIG_EVENT_PINS

# Passive breakpoints and external breakpoints are exclusive since they share
# the codepoint pins
ifeq ($(CONFIG_ENABLE_PASSIVE_BREAKPOINTS),1)
LOCAL_CFLAGS += -DCONFIG_ENABLE_PASSIVE_BREAKPOINTS
endif # CONFIG_ENABLE_PASSIVE_BREAKPOINTS

# Support for watchpoints (aka. code markers)
ifeq ($(CONFIG_ENABLE_WATCHPOINTS),1)
LOCAL_CFLAGS += -DCONFIG_ENABLE_WATCHPOINTS
endif # CONFIG_ENABLE_WATCHPOINTS

# Support features that require the target to initiate active debug mode
ifeq ($(CONFIG_ENABLE_TARGET_SIDE_DEBUG_MODE),1)
LOCAL_CFLAGS += -DCONFIG_ENABLE_TARGET_SIDE_DEBUG_MODE
endif # CONFIG_ENABLE_TARGET_SIDE_DEBUG_MODE

# Turn on an LED when in active debug mode
#   TODO: prefix with CONFIG_
ifeq ($(LED_IN_DEBUG_STATE),1)
LOCAL_CFLAGS += -DLED_IN_DEBUG_STATE
endif # LED_IN_DEBUG_STATE

# Enable passive breakpoints: breakpoint state is stored on the target
ifeq ($(CONFIG_ENABLE_PASSIVE_BREAKPOINTS),1)
LOCAL_CFLAGS += -DCONFIG_ENABLE_PASSIVE_BREAKPOINTS
endif # CONFIG_ENABLE_PASSIVE_BREAKPOINTS

ifeq ($(CONFIG_PASSIVE_BREAKPOINT_IMPL),c)
LOCAL_CFLAGS += -DCONFIG_PASSIVE_BREAKPOINT_IMPL_C
else ifeq ($(CONFIG_PASSIVE_BREAKPOINT_IMPL),asm)
LOCAL_CFLAGS += -DCONFIG_PASSIVE_BREAKPOINT_IMPL_ASM
else # CONFIG_PASSIVE_BREAKPOINT_IMPL
$(error Unrecognized CONFIG_PASSIVE_BREAKPOINT_IMPL choice)
endif # CONFIG_PASSIVE_BREAKPOINT_IMPL

# Enable the special boot breakpoint
# 	The boot breakpoint is turned on by setting all breakpoint pins to high.
# 	This is very hacky because it overloads the meaning of all breakpoints
# 	high, which normally simply means that all external breakpoints are
# 	enabled.
ifeq ($(CONFIG_ENABLE_BOOT_BREAKPOINT),1)
LOCAL_CFLAGS += -DCONFIG_ENABLE_BOOT_BREAKPOINT
endif # CONFIG_ENABLE_BOOT_BREAKPOINT

ifeq ($(CONFIG_PULL_DOWN_ON_CODEPOINT_LINES),1)
LOCAL_CFLAGS += -DCONFIG_PULL_DOWN_ON_CODEPOINT_LINES
endif # CONFIG_ENABLE_BOOT_BREAKPOINT

# Need to override, else these assignments get lost when building the app.
override CFLAGS += $(LOCAL_CFLAGS)
